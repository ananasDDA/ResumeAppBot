from telegram import Update, ParseMode
from telegram.ext import CallbackContext
from config import RESUME, PORTFOLIO_URL
from keyboards import get_main_keyboard, get_portfolio_keyboard, get_contact_keyboard

def start_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    message = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
        f"–Ø {RESUME['name']}, {RESUME['position']}.\n"
        f"{RESUME['specialization']}\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—ë –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ."
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    update.message.reply_text(
        message,
        reply_markup=get_main_keyboard()
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
    update.message.reply_text(
        "–ú–æ—ë –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ:",
        reply_markup=get_portfolio_keyboard(PORTFOLIO_URL)
    )

def services_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–£—Å–ª—É–≥–∏'"""
    services_text = "–ú–æ–∏ —É—Å–ª—É–≥–∏:\n\n" + "\n".join([f"‚Ä¢ {service}" for service in RESUME['services']])
    update.message.reply_text(services_text, reply_markup=get_main_keyboard())

def experience_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã'"""
    experience_text = "–ú–æ–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:\n\n"

    for job in RESUME['experience']:
        experience_text += f"üîπ <b>{job['position']}</b> –≤ {job['company']}\n"
        experience_text += f"   <i>{job['period']}</i>\n"
        experience_text += f"   {job['description']}\n\n"

    update.message.reply_text(experience_text, parse_mode=ParseMode.HTML, reply_markup=get_main_keyboard())

def resume_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–†–µ–∑—é–º–µ'"""
    skills_text = ", ".join(RESUME['skills'])

    resume_text = (
        f"<b>{RESUME['name']} - {RESUME['position']}</b>\n"
        f"{RESUME['specialization']}\n\n"
        f"<b>–ù–∞–≤—ã–∫–∏:</b>\n{skills_text}\n\n"
        f"<b>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:</b>\n"
    )

    for job in RESUME['experience']:
        resume_text += f"‚Ä¢ <b>{job['position']}</b> –≤ {job['company']} ({job['period']})\n"

    resume_text += "\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤:"

    update.message.reply_text(
        resume_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_main_keyboard()
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    update.message.reply_text(
        "–ú–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:",
        reply_markup=get_contact_keyboard()
    )

def portfolio_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ'"""
    update.message.reply_text(
        "–ú–æ—ë –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:",
        reply_markup=get_portfolio_keyboard(PORTFOLIO_URL)
    )

def text_message_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text

    if text == "–£—Å–ª—É–≥–∏":
        services_command(update, context)
    elif text == "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã":
        experience_command(update, context)
    elif text == "–†–µ–∑—é–º–µ":
        resume_command(update, context)
    elif text == "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ":
        portfolio_command(update, context)
    else:
        update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ:",
            reply_markup=get_main_keyboard()
        )