# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install prop-types --save

      - name: Modify vite.config.ts for GitHub Pages
        run: |
          # Create or update vite.config.ts to use the correct base path for GitHub Pages
          if [ -f "vite.config.ts" ]; then
            echo "Modifying existing vite.config.ts"
            sed -i 's/base: .*/base: "\/.\/",/g' vite.config.ts
            # If no base property exists, add it
            if ! grep -q "base:" vite.config.ts; then
              sed -i '/defineConfig/a \  base: "\/",\n' vite.config.ts
            fi
            cat vite.config.ts
          else
            echo "Creating new vite.config.ts"
            echo 'import { defineConfig } from "vite";
            import react from "@vitejs/plugin-react";

            export default defineConfig({
              base: "/",
              plugins: [react()],
            });' > vite.config.ts
          fi

      - name: Build
        run: npm run build

      - name: Find build directory
        id: find-build
        run: |
          if [ -d "dist" ]; then
            echo "build_dir=dist" >> $GITHUB_OUTPUT
            echo "Found dist directory"
          elif [ -d "build" ]; then
            echo "build_dir=build" >> $GITHUB_OUTPUT
            echo "Found build directory"
          elif [ -d "docs" ]; then
            echo "build_dir=docs" >> $GITHUB_OUTPUT
            echo "Found docs directory"
          else
            echo "No standard build directory found, listing all directories:"
            find . -type d -maxdepth 2
            echo "build_dir=." >> $GITHUB_OUTPUT
            echo "Using current directory as fallback"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './${{ steps.find-build.outputs.build_dir }}'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4